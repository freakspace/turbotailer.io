# Generated by Django 4.2.2 on 2023-07-09 02:11

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Content",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("identifier", models.CharField(verbose_name="Identifier")),
                ("updated", models.DateTimeField(null=True, verbose_name="Last updated")),
            ],
        ),
        migrations.CreateModel(
            name="EmbeddingTask",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("tokens_spent", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("In progress", "In progress"),
                            ("Complete", "Complete"),
                            ("Failed", "Failed"),
                        ],
                        default="Pending",
                        verbose_name="Status",
                    ),
                ),
                ("message", models.CharField(blank=True, null=True, verbose_name="Staus Message")),
            ],
        ),
        migrations.CreateModel(
            name="VectorTask",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("texts", models.JSONField(default=list, help_text="Texts to store as vectors", verbose_name="Tests")),
                (
                    "metadatas",
                    models.JSONField(default=list, help_text="Metadatas to store as vectors", verbose_name="Tests"),
                ),
                ("store_id", models.CharField(verbose_name="Store ID")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("In progress", "In progress"),
                            ("Complete", "Complete"),
                            ("Failed", "Failed"),
                        ],
                        default="Pending",
                        verbose_name="Status",
                    ),
                ),
                ("batch_size", models.IntegerField()),
            ],
        ),
    ]
